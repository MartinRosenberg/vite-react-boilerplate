/* Visit https://aka.ms/tsconfig to read more about this file */
{
	"compilerOptions": {
		/* Projects */
		"composite": true,  // Enable constraints that allow a TypeScript project to be used with project references.

		/* Language and Environment */
		"target": "ESNext",  // Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
		"lib": ["ESNext"],   // Specify a set of bundled library declaration files that describe the target runtime environment.

		/* Modules */
		"module": "ESNext",             // Specify what module code is generated.
		"moduleResolution": "bundler",  // Specify how TypeScript looks up a file from a given module specifier.

		/* JavaScript Support */
		"allowJs": true,  // Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files.
		"checkJs": true,  // Enable error reporting in type-checked JavaScript files.

		/* Interop Constraints */
		"allowSyntheticDefaultImports": true,  // Allow 'import x from y' when a module doesn't have a default export.

		/* Type Checking */
		"strict": true,                        // Enable all strict type-checking options.
		"noFallthroughCasesInSwitch": true,    // Enable error reporting for fallthrough cases in switch statements.
		"noImplicitAny": true,                 // Enable error reporting for expressions and declarations with an implied 'any' type.
		"noImplicitOverride": true,            // Ensure overriding members in derived classes are marked with an override modifier.
		"noImplicitReturns": true,             // Enable error reporting for codepaths that do not explicitly return in a function.
		"noImplicitThis": true,                // Enable error reporting when 'this' is given the type 'any'.
		"noUnusedLocals": true,                // Enable error reporting when local variables aren't read.
		"noUnusedParameters": true,            // Raise an error when a function parameter isn't read.
		"strictBindCallApply": true,           // Check that the arguments for 'bind', 'call', and 'apply' methods match the original function.
		"strictFunctionTypes": true,           // When assigning functions, check to ensure parameters and the return values are subtype-compatible.
		"strictNullChecks": true,              // When type checking, take into account 'null' and 'undefined'.
		"strictPropertyInitialization": true,  // Check for class properties that are declared but not set in the constructor.
		"useUnknownInCatchVariables": true,    // Default catch clause variables as 'unknown' instead of 'any'.

		/* Completeness */
		"skipLibCheck": true,  // Skip type checking all .d.ts files.
	},
	"include": [".eslintrc.cjs", ".prettierrc.js", "vite.config.ts"]
}
