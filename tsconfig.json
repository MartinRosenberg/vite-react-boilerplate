/* Visit https://aka.ms/tsconfig to read more about this file */
{
	"compilerOptions": {
		/* Language and Environment */
		"target": "ES2022",                        // Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
		"lib": ["ES2022", "DOM", "DOM.Iterable"],  // Specify a set of bundled library declaration files that describe the target runtime environment.
		"jsx": "react-jsx",                        // Specify what JSX code is generated.
		"useDefineForClassFields": true,           // Emit ECMAScript-standard-compliant class fields.

		/* Modules */
		"module": "ESNext",             // Specify what module code is generated.
		"moduleResolution": "bundler",  // Specify how TypeScript looks up a file from a given module specifier.
		"resolveJsonModule": true,      // Enable importing .json files.

		/* Emit */
		"allowImportingTsExtensions": true,  // Allow imports to include TypeScript file extensions.
		"noEmit": true,                      // Disable emitting files from a compilation.

		/* Interop Constraints */
		"isolatedModules": true,                   // Ensure that each file can be safely transpiled without relying on other imports.
		"esModuleInterop": true,                   // Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility.
		"forceConsistentCasingInFileNames": true,  // Ensure that casing is correct in imports.

		/* Type Checking */
		"strict": true,                        // Enable all strict type-checking options.
		"noFallthroughCasesInSwitch": true,    // Enable error reporting for fallthrough cases in switch statements.
		"noImplicitAny": true,                 // Enable error reporting for expressions and declarations with an implied 'any' type.
		"noImplicitOverride": true,            // Ensure overriding members in derived classes are marked with an override modifier.
		"noImplicitReturns": true,             // Enable error reporting for codepaths that do not explicitly return in a function.
		"noImplicitThis": true,                // Enable error reporting when 'this' is given the type 'any'.
		"noUnusedLocals": true,                // Enable error reporting when local variables aren't read.
		"noUnusedParameters": true,            // Raise an error when a function parameter isn't read.
		"strictBindCallApply": true,           // Check that the arguments for 'bind', 'call', and 'apply' methods match the original function.
		"strictFunctionTypes": true,           // When assigning functions, check to ensure parameters and the return values are subtype-compatible.
		"strictNullChecks": true,              // When type checking, take into account 'null' and 'undefined'.
		"strictPropertyInitialization": true,  // Check for class properties that are declared but not set in the constructor.
		"useUnknownInCatchVariables": true,    // Default catch clause variables as 'unknown' instead of 'any'.

		/* Completeness */
		"skipLibCheck": true                   // Skip type checking all .d.ts files.
	},
	"include": ["src/"],
	"references": [{ "path": "./tsconfig.node.json" }]
}
